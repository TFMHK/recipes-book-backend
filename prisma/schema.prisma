// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}


model Ingredient{
  id                  String                @id @default(uuid())
  name                String                
  amount              Float
  recipe              Recipe?               @relation(fields: [recipeId], references: [id])
  recipeId            String?
  user                User?                 @relation(fields: [userId], references: [id])
  userId              String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Recipe{
  id                  String                @id @default(uuid())
  name                String                
  description         String 
  directions          String               
  imagePath           String
  ingredients         Ingredient[]
  author              User?                 @relation(fields: [authorId], references: [id])
  authorId            String?
  visible             Boolean               @default(true)
  permissions         Permissions[]
  recipeRating        Rating[]
  comments            Comments[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User{
  id                  String                @id @default(uuid())
  username            String                @unique
  email               String                @unique
  hashedPassword      String
  recipes             Recipe[]
  shoppingList        Ingredient[]
  permissions         Permissions[]
  ratedRec            Rating[]
  comments            Comments[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Permissions{
  id                  String                @id @default(uuid())
  user                User?                 @relation(fields: [userId], references: [id])
  userId              String?
  recipe              Recipe?               @relation(fields: [recipeId], references: [id])
  recipeId            String?
  permission          Permission
  @@unique([userId, recipeId])
}

model Rating{
  id                  String                @id @default(uuid())
  user                User?                 @relation(fields: [userId], references: [id])
  userId              String?
  recipe              Recipe?               @relation(fields: [recipeId], references: [id])
  recipeId            String?
  rating              Int?
  @@unique([userId, recipeId])
}

model Comments{
  id                  String                @id @default(uuid())
  user                User?                 @relation(fields: [userId], references: [id])
  userId              String?
  recipe              Recipe?               @relation(fields: [recipeId], references: [id])
  recipeId            String?
  comment             String?
  //@@unique([userId, recipeId])
}

enum Permission{
  EDIT
  WATCH
}